{"version":3,"file":"stories-Game-stories.524ce403.iframe.bundle.js","mappings":";;;;;;;;;AAMA;AAMA;;;;;;;;;;;;AAiBA;;AC3BA;;;;;;AAQA;;;;;AAKA;;;;;;;;;;;;;;;;ACDA;;;;;AAKA;ACdA;;;;ACCA;;;;AAIA;AAGA;;;;;;;;;;;;;;;ACIA;;AAEA;;AAIA;;;AAGA;AAGA;;;;;AAKA;;AAEA;;;AAKA;;;;;AAKA;;;AAGA;;AAIA;;AC1CA;;ACAA;;;;ACHA;AACA;;AAIA;AACA;;AAIA;AACA;;;;;;;;;;;;;;ACNA;AACA;AACA;;;;;AAKA;;;;;;;;;;;;;;;ACHA;;AAEA;;AAIA;;;AAGA;AAGA;;;;;AAKA;;AAEA;;;AAKA;;;;;AAKA;;;AAGA;;AAIA","sources":["webpack://t-react-sudoku/./src/game-square/sudoku-square.styled.js","webpack://t-react-sudoku/./src/game-square/value-wrapper.styled.js","webpack://t-react-sudoku/./src/game-square/notes-wrapper.styled.js","webpack://t-react-sudoku/./src/game-square/notes-wrapper.js","webpack://t-react-sudoku/./src/game/sudoku.styled.js","webpack://t-react-sudoku/./src/validate/validate.styled.js","webpack://t-react-sudoku/./src/validate/validate.js","webpack://t-react-sudoku/./src/app.js","webpack://t-react-sudoku/./src/button/button-bar.styled.js","webpack://t-react-sudoku/./src/button/button.styled.js","webpack://t-react-sudoku/./src/reset/reset.styled.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst Main = styled.div`\n  position: relative;\n  width: 50px;\n  height: 50px;\n  border-right: ${({ isThickRight, isLastColumn, theme }) =>\n    isThickRight\n      ? `solid 4px ${theme.board}`\n      : isLastColumn\n        ? ''\n        : `solid 1px ${theme.board}`};\n  border-bottom: ${({ isThickBottom, isLastRow, theme }) =>\n    isThickBottom\n      ? `solid 4px ${theme.board}`\n      : isLastRow\n        ? ''\n        : `solid 1px ${theme.board}`};\n\n  &:hover {\n    cursor: pointer;\n  }\n  &:after {\n    content: '';\n    position: absolute;\n    width: 51px;\n    height: 51px;\n    left: 0;\n    top: 0;\n    background-color: ${({ isSelectedBoardIndex, isSelected, theme }) =>\n      isSelectedBoardIndex ? '' : isSelected ? `${theme.overlay}` : ''};\n  }\n`;\n\nexport default Main;\n","import styled from 'styled-components';\n\nexport const Main = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Value = styled.div`\n  transition: all 0.5s;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  color: ${({ isOriginal, theme, hasError }) =>\n    isOriginal ? theme.original : hasError ? 'red' : theme.primary};\n  justify-content: center;\n  font-family: 'Titillium Web', sans-serif;\n  font-weight: bold;\n  font-size: 25px;\n  align-items: center;\n`;\n","import styled from 'styled-components';\n\nexport const Main = styled.div`\n  display: flex;\n  align-items: top left;\n  justify-content: flex-start;\n  flex-direction: row;\n  flex-wrap: wrap;\n  flex-flow: row wrap;\n  align-content: flex-start;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Value = styled.span`\n  transition: all 0.5s;\n  font-family: 'Titillium Web', sans-serif;\n  font-weight: bold;\n  font-size: 15px;\n  color: ${({ isOriginal, theme }) =>\n    isOriginal ? theme.original : theme.secondary};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Main, Value } from './notes-wrapper.styled';\n\nconst NotesWrapper = ({ values }) => (\n  <Main>\n    {values.map(val => (\n      <Value key={`note_${val}`}>{val}</Value>\n    ))}\n  </Main>\n);\n\nNotesWrapper.propTypes = {\n  values: PropTypes.array.isRequired,\n};\n\nexport default NotesWrapper;\n","import styled from 'styled-components';\n\nexport const Main = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => `${theme.background}`};\n\n  width: 460px;\n  overflow: hidden;\n  color: ${({ theme }) => `${theme.inverted}`};\n`;\n\nexport const Board = styled.div`\n  display: flex;\n`;\n","import styled from 'styled-components';\n\nimport { Button } from '../button';\n\nexport const Main = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  margin: auto;\n  width: 350px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 150px;\n  border: ${({ theme }) => `solid 1px ${theme.board}`};\n  border-radius: 8px;\n  background-color: ${({ theme }) => theme.background};\n  z-index: 100;\n`;\n\nexport const Message = styled.p`\n  font-size: small;\n  font-family: 'Montserrat', sans-serif;\n  color: ${({ theme }) => theme.primary};\n`;\n\nexport const ConfirmButton = styled(Button)`\n  width: 90px;\n  font-size: 16px;\n  font-family: 'Montserrat', sans-serif;\n  border-radius: 8px;\n  border-color: ${({ theme }) => theme.primary};\n  &:hover {\n    color: ${({ theme }) => theme.primary};\n  }\n  background-color: transparent;\n`;\n\nexport const CancelButton = styled(Button)`\n  width: 90px;\n  font-size: 16px;\n  background-color: transparent;\n  border-radius: 8px;\n  border-color: ${({ theme }) => theme.inverted};\n  font-family: 'Montserrat', sans-serif;\n  &:hover {\n    color: ${({ theme }) => theme.primary};\n  }\n`;\n\nexport const ButtonBox = styled.div`\n  display: flex;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Main,\n  ConfirmButton,\n  CancelButton,\n  ButtonBox,\n  Message,\n} from './validate.styled';\n\nexport default class Reset extends React.Component {\n  static propTypes = {\n    onAction: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const { primaryAction, cancelAction } = this.props;\n\n    return (\n      <Main>\n        <Message>\n          Validating your sudoku board will disqualify your score. Do you still\n          wish to validate your board?\n        </Message>\n        <ButtonBox>\n          <CancelButton onClick={cancelAction}>No</CancelButton>\n          <ConfirmButton onClick={primaryAction}>Yes</ConfirmButton>\n        </ButtonBox>\n      </Main>\n    );\n  }\n}\n","import React, { Fragment, Component } from 'react';\n\nimport { ThemeProvider, injectGlobal } from 'styled-components';\n\ninjectGlobal`\n @import url('https://fonts.googleapis.com/css?family=Montserrat|Titillium+Web');\n`;\n\nimport StyledApp from './app.styled';\nimport { Board } from './game';\n\nclass App extends Component {\n  state = {\n    theme: {\n      name: 'Light Orange',\n      primary: 'rgba(255,90,0,1)',\n      secondary: 'rgba(0,0,0,1)',\n      board: 'rgba(255,90,0,0.7)',\n      overlay: 'rgba(255,90,0,0.2)',\n      background: 'white',\n      original: 'rgba(102, 102, 102,1)',\n      inverted: 'black',\n    },\n  };\n\n  render() {\n    const { theme } = this.state;\n    const {\n      onComplete,\n      difficulty,\n      hide,\n      CustomResetModal,\n      CustomValidateModal,\n    } = this.props;\n    return (\n      <ThemeProvider theme={theme}>\n        <StyledApp>\n          <Board\n            hide={hide}\n            onComplete={onComplete}\n            difficulty={difficulty}\n            CustomResetModal={CustomResetModal}\n            CustomValidateModal={CustomValidateModal}\n          />\n        </StyledApp>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","import styled from 'styled-components';\n\nexport const Main = styled.div`\n  display: flex;\n  flex-direction: column;\n  z-index: 99;\n`;\n\nexport const FirstRow = styled.div`\n  color: ${({ theme }) => `${theme.inverted}`};\n  display: flex;\n`;\n\nexport const SecondRow = styled.div`\n  color: ${({ theme }) => `${theme.inverted}`};\n  display: flex;\n`;\n\nexport const ThirdRow = styled.div`\n  color: ${({ theme }) => `${theme.inverted}`};\n  display: flex;\n  justify-content: space-around;\n`;\n","import styled from 'styled-components';\n\nconst StyledButton = styled.div`\n  display: flex;\n  transition: all 0.3s;\n  align-items: center;\n  font-family: 'Titillium Web', sans-serif;\n  font-weight: bold;\n  font-size: 25px;\n  user-select: none;\n  justify-content: center;\n  height: 40px;\n  width: 40px;\n  background-color: ${({ enabled, theme }) => enabled && theme.primary};\n  color: ${({ theme }) => `1px solid ${theme.secondary}`};\n  border: ${({ theme }) => `2px solid ${theme.primary}`};\n  border-radius: 50%;\n  margin: 5px;\n  &:hover {\n    cursor: pointer;\n    color: ${({ theme, enabled }) =>\n      enabled ? `${theme.background}` : `${theme.primary}`};\n  }\n`;\n\nexport default StyledButton;\n","import styled from 'styled-components';\n\nimport { Button } from '../button';\n\nexport const Main = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  margin: auto;\n  width: 350px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 150px;\n  border: ${({ theme }) => `solid 1px ${theme.board}`};\n  border-radius: 8px;\n  background-color: ${({ theme }) => theme.background};\n  z-index: 100;\n`;\n\nexport const Message = styled.p`\n  font-size: small;\n  font-family: 'Montserrat', sans-serif;\n  color: ${({ theme }) => theme.primary};\n`;\n\nexport const ConfirmButton = styled(Button)`\n  width: 90px;\n  font-size: 16px;\n  font-family: 'Montserrat', sans-serif;\n  border-radius: 8px;\n  border-color: ${({ theme }) => theme.primary};\n  &:hover {\n    color: ${({ theme }) => theme.primary};\n  }\n  background-color: transparent;\n`;\n\nexport const CancelButton = styled(Button)`\n  width: 90px;\n  font-size: 16px;\n  background-color: transparent;\n  border-radius: 8px;\n  border-color: ${({ theme }) => theme.inverted};\n  font-family: 'Montserrat', sans-serif;\n  &:hover {\n    color: ${({ theme }) => theme.primary};\n  }\n`;\n\nexport const ButtonBox = styled.div`\n  display: flex;\n`;\n"],"names":[],"sourceRoot":""}